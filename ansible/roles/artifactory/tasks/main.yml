---
- name: Install Python dependencies
  pip:
    name: [
      'boto',
      'boto3',
      'botocore'
    ]
    umask: "0022"

- name: upgrade all packages
  yum: 
    name: '*'
    state: latest

-  name: reboot the server
   shell: 'sleep 1 && shutdown -r now "Reboot triggered by Ansible" && sleep 1'
   async: 1
   poll: 1
   ignore_errors: true
   become: true
#   shell: (sleep 2 && shutdown -r now) &
#   async: 1
#   poll: 0
#   ignore_errors: true


#-  name: Wait for the reboot and reconnect
#   wait_for:
#     host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
#     port: 22
#     delay: 10
#     search_regex: OpenSSH
#   connection: local

- name: Create temporary build directory to install artifactory
  tempfile:
    state: directory
  register: tempfile

- name: GET Artifactory installer rpm from S3 bucket
  amazon.aws.aws_s3:
    bucket: "{{ resource_bucket_name }}"
    object: "{{ resource_bucket_artifactory_prefix }}/{{ artifactory_package }}"
    dest: "{{ tempfile.path }}/{{ artifactory_package }}"
    mode: get

- name: Install Artifactory RPM package.
  yum:
    name: "{{ tempfile.path }}/{{ artifactory_package }}"
    state: present

- name: Remove temporary artifactory build directory
  ansible.builtin.file:
    path: "{{ tempfile.path }}"
    state: absent

- name: Stop the artifactory service
  service:
    name: artifactory
    state: stopped

- name: Disable the artifactory service
  service:
    name: artifactory
    enabled: no

- name: install EPEL
  yum:
    name: epel-release
    state: latest

- name: Configure JFrog environment
  copy:
    mode: 0644
    owner: root
    group: root
    dest: "/etc/profile.d/artifactory.sh"
    content: |
      export JFROG_HOME="/opt/jfrog"